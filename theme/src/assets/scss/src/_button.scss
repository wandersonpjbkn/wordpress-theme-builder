// ==============================================
// Button and link styles
// ==============================================

@use 'variables' as var;
@use 'mixins' as mix;

.btn {
  @include mix.is-button();

  // group
  &__group {
    > .btn:not(first-child) { margin-top: 30px; }

    @media (min-width: var.$screen-medium) {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: 30px;

      > .btn:not(first-child) { margin-top: 0; }
    }
  }

  &--primary {
    @include mix.is-button();
    
    background-color: var(--color-primary);
    color: var(--color-light);

    &:hover { color: var(--color-secundary) }
  }

  &--primary-dark {
    @include mix.is-button();
    
    background-color: var(--color-primary-dark);
    color: var(--color-light);

    &:hover { color: var(--color-secundary) }
  }

  &--secundary {
    @include mix.is-button();
    
    background-color: var(--color-secundary);
    color: var(--color-light);

    &:hover { color: var(--color-light) }
  }

  &--success {
    @include mix.is-button();
    
    background-color: var(--color-success);
    color: var(--color-light);

    &:hover { color: var(--color-light) }
  }

  // icons
  @each $var in var.$icons {
    &--icn-#{$var} {
      @include mix.is-icn();

      background-image: url(var.$imgs-path + '/icn-' + $var + '.svg') !important;
    }
  }

  // inline style
  &--inline {
    $size: 20px;

    display: inline-block;
    min: {
      width: $size;
      height: $size;
    };
    margin-left: 5px;
  }

  &.disabled { @include mix.is-disabled() }
}
